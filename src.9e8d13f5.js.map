{"version":3,"sources":["js/task1.js","js/task2.js","js/task3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","id","reject","canProcess","logSuccess","trans","logError","warn","catch"],"mappings":"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","file":"src.9e8d13f5.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n    return new Promise(resolve => {\n        setTimeout(() => resolve(ms), ms);\n    });\n};\n\nconst logger = time => console.log(`Fulfilled after ${time}ms`);\n\n// Tests\ndelay(2000).then(logger); // Fulfilled after 2000ms\ndelay(1000).then(logger); // Fulfilled after 1000ms\ndelay(1500).then(logger); // Fulfilled after 1500ms","const users = [\n    { name: 'Mango', active: true },\n    { name: 'Poly', active: false },\n    { name: 'Ajax', active: true },\n    { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n    const updatedUsers = allUsers.map(user =>\n        user.name === userName ? { ...user, active: !user.active } : user,\n    );\n    return new Promise(resolve => {\n        resolve(updatedUsers)\n    })\n\n};\n\n\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);","const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n    const { id, time } = transaction;\n    const delay = randomIntegerFromInterval(200, 500);\n\n    return new Promise((resolve, reject) => {\n        const canProcess = Math.random() > 0.3;\n\n        setTimeout(() => {\n            if (canProcess) {\n                resolve({id ,time});\n            } else {\n                reject(transaction.id);\n            }\n        }, delay);\n\n    });\n}\n\nconst logSuccess = (trans) => {\n    console.log(`Transaction ${trans.id} processed in ${trans.time}ms`);\n};\n\nconst logError = (id) => {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\nmakeTransaction({ id: 70, time: 150 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 71, time: 230 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 72, time: 75 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 73, time: 100 })\n    .then(logSuccess)\n    .catch(logError);","import './sass/main.scss';\nimport './js/task1.js'\nimport './js/task2.js'\nimport './js/task3.js'\n"]}